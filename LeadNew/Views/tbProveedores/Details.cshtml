@*@model LeadNew.Models.tbProveedores*@

@{
    ViewData["Title"] = "Detalles " + " ";
}

<div style="padding-top: 5em;">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "tbProveedores")">Listado de proveedores</a></li>
            <li class="breadcrumb-item active" aria-current="page">detalle proveedor</li>
        </ol>
    </nav>
    <h2>Detalle de Proveedor</h2>
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link active" data-toggle="tab" href="#Proveedor">Proveedor</a>

        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#Contactos">Contactos</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#Notas">Notas</a>
        </li>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane active" id="Proveedor">
            <div>
                <h2>Detalles</h2>
                <dl class="dl-horizontal">
                    @foreach (var item in ViewData["tbProveedores"] as IEnumerable<LeadNew.Models.ProveedoresVista>)
                    {
                        <dt>
                            Nombre
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.pvNombre)
                        </dd>
                        <dt>
                            Teléfono
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.pvTelefono)
                        </dd>
                        <dt>
                            Correo
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.pvCorreo)
                        </dd>
                        <dt>
                            Dirección
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.pvDireccion)
                        </dd>
                        <dt>
                            Descripción
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.pvDescripcion)
                        </dd>
                        <dt>
                            Fecha de creación
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => item.pvFechaCreacion)
                        </dd>
                        <dt>
                            Tipo de proveedor
                        </dt>
                        <dd>
                            @item.tpDescripcion
                        </dd>
                    }
                </dl>
            </div>
        </div>
        <div class="tab-pane fade" id="Contactos">
            <h2>Listado de Contactos</h2>
            <p>
                <a class="btn btn-success" onclick="CrearContacto();"><img src="~/images/add-24px.svg" class="img-fluid" alt="Responsive image">Crear contacto</a>
            </p>
            <table class="table table-bordered table-hover table-striped">
                <thead>
                    <tr>
                        <th>
                            Nombre
                        </th>
                        <th>
                            Teléfono
                        </th>
                        <th>
                            Correo
                        </th>
                        <th>
                            Puesto
                        </th>
                        <th>
                            Fecha de Creación
                        </th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewData["contactos"] as IEnumerable<LeadNew.Models.tbContactosProveedores>)
                    {
                        <tr>
                            <td>
                                <input type="text" class="form-control" id="cpNombre @item.cpId" placeholder="Nombre" value="@item.cpNombre" maxlength="60">
                            </td>
                            <td>
                                <input type="text" class="form-control" id="cpTelefono @item.cpId" placeholder="Teléfono" value="@item.cpTelefono" maxlength="10">
                            </td>
                            <td>
                                <input type="text" class="form-control" id="cpCorreo @item.cpId" placeholder="Correo" value="@item.cpCorreo" maxlength="20">
                            </td>
                            <td>
                                <input type="text" class="form-control" id="cpPuesto @item.cpId" placeholder="Puesto" value="@item.cpPuesto" maxlength="60">
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.cpFechaCreacion)
                            </td>
                            <td>
                                <a class="btn btn-primary btn-sm" onclick="EditarContacto('@item.cpId', document.getElementById('cpNombre @item.cpId').value, document.getElementById('cpTelefono @item.cpId').value, document.getElementById('cpCorreo @item.cpId').value, document.getElementById('cpPuesto @item.cpId').value);"><img src="~/images/create-24px.svg" class="img-fluid" alt="Responsive image">Editar</a>
                                @*<a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.pvId"><img src="~/images/delete-24px.svg" class="img-fluid" alt="Responsive image">Eliminar</a>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane fade" id="Notas">
            <h2>Listado de Notas</h2>
            <p>
                <a class="btn btn-success" onclick="CrearNota();"><img src="~/images/add-24px.svg" class="img-fluid" alt="Responsive image">Crear Nota</a>
            </p>
            <table class="table table-bordered table-hover table-striped">
                <thead>
                    <tr>
                        <th>Nota</th>
                        <th>Fecha de creación</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewData["notas"] as IEnumerable<LeadNew.Models.tbNotasProveedores>)
                    {
                        <tr>
                            <td>
                                <input type="text" class="form-control" id="npNota @item.npId" placeholder="Puesto" value="@item.npNota" maxlength="150">
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.npFechaCreacion)
                            </td>
                            <td>
                                <a class="btn btn-primary btn-sm" onclick="EditarNota('@item.npId', document.getElementById('npNota @item.npId').value );"><img src="~/images/create-24px.svg" class="img-fluid" alt="Responsive image">Editar</a>
                                @*<a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.pvId"><img src="~/images/delete-24px.svg" class="img-fluid" alt="Responsive image">Eliminar</a>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="ModalCrearContacto" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Crear Contacto</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" class="form-control" id="id" value="@ViewData["idproveedor"]" hidden="hidden">
                <div class="form-group">
                    <label for="formGroupExampleInput">Nombre:</label>
                    <input type="text" class="form-control" id="nombre" placeholder="Nombre" maxlength="25">
                </div>
                <div class="form-group">
                    <label for="formGroupExampleInput">correo:</label>
                    <input type="email" class="form-control" id="correo" placeholder="correo"  maxlength="35">
                </div>
                <div class="form-group">
                    <label for="formGroupExampleInput">Teléfono:</label>
                    <input type="number" class="form-control" id="telefono" placeholder="Teléfono"  pattern="/^-?\d+\.?\d*$/" onKeyPress="if(this.value.length==8) return false;">
                </div>
                <div class="form-group">
                    <label for="formGroupExampleInput">Puesto:</label>
                    <input type="text" class="form-control" id="puesto" placeholder="Puesto" maxlength="60">
                </div>
            </div>
            <div class="modal-footer">
                <button id="CrearContacto" type="button" class="btn btn-success" onclick="formcheck();">Guardar</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="ModalCrearNota" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Crear Nota</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" class="form-control" id="idp" value="@ViewData["idproveedor"]" hidden="hidden">
                <div class="form-group">
                    <label for="formGroupExampleInput">Nota:</label>
                    <textarea type="text" class="form-control" id="nota" placeholder="Nota" maxlength="250"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button id="CrearNota" type="button" class="btn btn-success" onclick="CrearNotaProveedor();">Guardar</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        function CrearNota() {          
            $('#ModalCrearNota').modal('show');
        }

        function EditarNota(id, Nota) {
            var fd = new FormData();

            fd.append("Nota", Nota);
            fd.append("id", id);

            $.ajax({
                url: '@Url.Action("EditarNota", "tbProveedores")',
                type: 'POST',
                cache: false,
                processData: false,
                contentType: false,
                processData: false,
                dataType: 'json',
                data: fd,
                success: function (data) {
                    if (data == true) {
                        location.reload();
                    } else if (data == false){
                        alert("Error al editar nota");
                    }
                },
                error: function (jqXHR, textStatus, error) {
                    var exception = JSON.parse(jqXHR.responseText);
                    alert("error al enviar datos" + exception);
                }
            });
        }
   
        function EditarContacto(id, nombre, telefono, correo, puesto) {
            var fd = new FormData();

            fd.append("id", id);
            fd.append("nombre", nombre);
            fd.append("telefono", telefono);
            fd.append("correo", correo);
            fd.append("puesto", puesto);

            $.ajax({
                url: '@Url.Action("EditarContacto", "tbProveedores")',
                type: 'POST',
                cache: false,
                processData: false,
                contentType: false,
                processData: false,
                dataType: 'json',
                data: fd,
                success: function (data) {
                    if (data == true) {
                        location.reload();
                    } else if (data == false){
                        alert("Error al editar nota");
                    }
                },
                error: function (jqXHR, textStatus, error) {
                    var exception = JSON.parse(jqXHR.responseText);
                    alert("error al enviar datos" + exception);
                }
            });
        }

        function CrearContacto() {
            $('#ModalCrearContacto').modal('show');
        }

        function CrearNotaProveedor() {
            $("#CrearNota").prop('disabled', true);
            var fd = new FormData();
            var nota = $("#nota").val();
            var id = $("#idp").val();

            fd.append("nota", nota);
            fd.append("id", id);

            $.ajax({
                url: '@Url.Action("CrearNota", "tbProveedores")',
                type: 'POST',
                cache: false,
                processData: false,
                contentType: false,
                processData: false,
                dataType: 'json',
                data: fd,
                success: function (data) {
                    if (data == true) {
                        location.reload();
                    } else if (data == false){
                        alert("Error al ingresar nota");
                        $("#CrearNota").prop('disabled', false);
                    }
                },
                error: function (jqXHR, textStatus, error) {
                    var exception = JSON.parse(jqXHR.responseText);
                    alert("error al enviar datos" + exception);
                    $("#CrearNota").prop('disabled', false);
                }
            });
        }

        function formcheck() {
            var isValid = true;
            $('input[type="text"], input[type = "password"], input[type = "number"]').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
            } else {
                Crear();
            }
        }

        function Crear() {
            $("#CrearContacto").prop('disabled', true);
            var fd = new FormData();
            var nombre = $("#nombre").val();
            var correo = $("#correo").val();
            var telefono = $("#telefono").val();
            var puesto = $("#puesto").val();
            var id = $("#id").val();

            fd.append("nombre", nombre);
            fd.append("correo", correo);
            fd.append("telefono", telefono);
            fd.append("puesto", puesto);
            fd.append("id", id);

            var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            if (!expr.test(correo)) {
                alert("Correo invalido");
                $("#CrearContacto").prop('disabled', false);
            } else {
                $.ajax({
                    url: '@Url.Action("CrearContacto", "tbProveedores")',
                    type: 'POST',
                    cache: false,
                    processData: false,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    data: fd,
                    success: function (data) {
                        if (data == true) {
                            location.reload();
                        } else if (data == false){
                            alert("Error al ingresar contacto");
                            $("#CrearContacto").prop('disabled', false);
                        }
                    },
                    error: function (jqXHR, textStatus, error) {
                        var exception = JSON.parse(jqXHR.responseText);
                        alert("error al enviar datos" + exception);
                        $("#CrearContacto").prop('disabled', false);
                    }
                });
            }            
        }
    </script>
}